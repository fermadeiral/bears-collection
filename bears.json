{
  "version": "Bears 1.0",
  "repository": {
    "name": "INRIA/spoon",
    "githubId": 14176513,
    "url": "https://github.com/INRIA/spoon",
    "isFork": false,
    "original": {
      "name": "",
      "githubId": 0,
      "url": ""
    },
    "isPullRequest": true,
    "pullRequestId": 2760
  },
  "builds": {
    "buggyBuild": {
      "id": 453383968,
      "url": "http://travis-ci.org/INRIA/spoon/builds/453383968",
      "date": "Nov 10, 2018 10:28:11 PM"
    },
    "fixerBuild": {
      "id": 453477713,
      "url": "http://travis-ci.org/INRIA/spoon/builds/453477713",
      "date": "Nov 11, 2018 7:20:08 AM"
    }
  },
  "reproductionBuggyBuild": {
    "reproductionDateBeginning": "Nov 11, 2018 8:12:37 AM",
    "reproductionDateEnd": "Nov 11, 2018 8:30:00 AM",
    "machineInfo": {
      "hostName": "spirals-bears",
      "numberCPU": 16,
      "freeMemory": 278903064,
      "totalMemory": 524812288
    },
    "totalDuration": 1038,
    "processDurations": {
      "cloning": {
        "nbSteps": 1,
        "totalDuration": 12,
        "stepNames": [
          "CloneRepository"
        ],
        "stepDurations": [
          12
        ]
      },
      "building": {
        "nbSteps": 2,
        "totalDuration": 94,
        "stepNames": [
          "CheckoutBuggyBuildCandidate",
          "BuildProjectBuggyBuildCandidate"
        ],
        "stepDurations": [
          3,
          91
        ]
      },
      "testing": {
        "nbSteps": 1,
        "totalDuration": 489,
        "stepNames": [
          "TestProjectBuggyBuildCandidate"
        ],
        "stepDurations": [
          489
        ]
      }
    },
    "projectRootPomPath": "./workspace/INRIA/spoon/453383968/pom.xml"
  },
  "patchDiff": {
    "files": {
      "numberAdded": 0,
      "numberChanged": 1,
      "numberDeleted": 0
    },
    "lines": {
      "numberAdded": 4,
      "numberDeleted": 2
    }
  },
  "tests": {
    "failingModule": "/root/workspace/INRIA/spoon/453383968",
    "overallMetrics": {
      "numberRunning": 1605,
      "numberPassing": 1473,
      "numberFailing": 1,
      "numberErroring": 131,
      "numberSkipping": 5,
      "failures": [
        {
          "failureName": "java.lang.AssertionError",
          "isError": false,
          "occurrences": 1
        },
        {
          "failureName": "java.lang.NullPointerException",
          "isError": true,
          "occurrences": 75
        },
        {
          "failureName": "java.lang.IndexOutOfBoundsException",
          "isError": true,
          "occurrences": 2
        },
        {
          "failureName": "spoon.compiler.ModelBuildingException",
          "isError": true,
          "occurrences": 54
        }
      ]
    },
    "failingClasses": [
      {
        "testClass": "spoon.test.jar.JarTest",
        "numberRunning": 4,
        "numberPassing": 2,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.replace.ReplaceTest",
        "numberRunning": 17,
        "numberPassing": 15,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.imports.ImportTest",
        "numberRunning": 48,
        "numberPassing": 45,
        "numberFailing": 0,
        "numberErroring": 3,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.casts.CastTest",
        "numberRunning": 5,
        "numberPassing": 2,
        "numberFailing": 0,
        "numberErroring": 3,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.intercession.insertBefore.InsertMethodsTest",
        "numberRunning": 9,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 9,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.reference.ExecutableReferenceTest",
        "numberRunning": 8,
        "numberPassing": 6,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.signature.SignatureTest",
        "numberRunning": 8,
        "numberPassing": 2,
        "numberFailing": 0,
        "numberErroring": 6,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.model.IncrementalLauncherTest",
        "numberRunning": 4,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 4,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.JarLauncherTest",
        "numberRunning": 3,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 3,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.ctType.CtTypeTest",
        "numberRunning": 8,
        "numberPassing": 5,
        "numberFailing": 0,
        "numberErroring": 3,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.targeted.TargetedExpressionTest",
        "numberRunning": 17,
        "numberPassing": 14,
        "numberFailing": 0,
        "numberErroring": 3,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.model.BlockTest",
        "numberRunning": 2,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.reflect.ast.CloneTest",
        "numberRunning": 5,
        "numberPassing": 3,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.lambda.LambdaTest",
        "numberRunning": 23,
        "numberPassing": 21,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.strings.StringLiteralTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.reference.VariableAccessTest",
        "numberRunning": 11,
        "numberPassing": 7,
        "numberFailing": 0,
        "numberErroring": 4,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.api.NoClasspathTest",
        "numberRunning": 5,
        "numberPassing": 4,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.ctClass.CtClassTest",
        "numberRunning": 8,
        "numberPassing": 7,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.fieldaccesses.FieldAccessTest",
        "numberRunning": 16,
        "numberPassing": 13,
        "numberFailing": 0,
        "numberErroring": 3,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.compilation.CompilationTest",
        "numberRunning": 13,
        "numberPassing": 9,
        "numberFailing": 0,
        "numberErroring": 4,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.support.visitor.java.JavaReflectionTreeBuilderTest",
        "numberRunning": 19,
        "numberPassing": 18,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.generics.GenericsTest",
        "numberRunning": 48,
        "numberPassing": 47,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.intercession.IntercessionTest",
        "numberRunning": 7,
        "numberPassing": 2,
        "numberFailing": 0,
        "numberErroring": 5,
        "numberSkipping": 1
      },
      {
        "testClass": "spoon.test.type.TypeTest",
        "numberRunning": 13,
        "numberPassing": 12,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.snippets.SnippetTest",
        "numberRunning": 7,
        "numberPassing": 3,
        "numberFailing": 0,
        "numberErroring": 4,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.enums.EnumsTypeTest",
        "numberRunning": 2,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.method.MethodTest",
        "numberRunning": 6,
        "numberPassing": 5,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.factory.TypeFactoryTest",
        "numberRunning": 5,
        "numberPassing": 4,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.reflect.declaration.UnknownDeclarationTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.model.TypeTest",
        "numberRunning": 8,
        "numberPassing": 7,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.reference.TypeReferenceTest",
        "numberRunning": 28,
        "numberPassing": 19,
        "numberFailing": 0,
        "numberErroring": 9,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.parent.ParentTest",
        "numberRunning": 10,
        "numberPassing": 8,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 1
      },
      {
        "testClass": "spoon.test.api.APITest",
        "numberRunning": 23,
        "numberPassing": 16,
        "numberFailing": 0,
        "numberErroring": 7,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "numberRunning": 52,
        "numberPassing": 51,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.prettyprinter.DefaultPrettyPrinterTest",
        "numberRunning": 14,
        "numberPassing": 13,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.intercession.RemoveTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.module.TestModule",
        "numberRunning": 6,
        "numberPassing": 2,
        "numberFailing": 0,
        "numberErroring": 4,
        "numberSkipping": 2
      },
      {
        "testClass": "spoon.LauncherTest",
        "numberRunning": 4,
        "numberPassing": 3,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.visitor.AssignmentsEqualsTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.trycatch.TryCatchTest",
        "numberRunning": 12,
        "numberPassing": 7,
        "numberFailing": 0,
        "numberErroring": 5,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.parameters.ParameterTest",
        "numberRunning": 3,
        "numberPassing": 1,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.variable.AccessTest",
        "numberRunning": 8,
        "numberPassing": 7,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.imports.ImportAndExtendWithPackageNameTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.field.FieldTest",
        "numberRunning": 6,
        "numberPassing": 5,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.serializable.SerializableTest",
        "numberRunning": 3,
        "numberPassing": 2,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.model.SwitchCaseTest",
        "numberRunning": 2,
        "numberPassing": 1,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.methodreference.MethodReferenceTest",
        "numberRunning": 13,
        "numberPassing": 11,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.comment.CommentTest",
        "numberRunning": 24,
        "numberPassing": 22,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.serializable.SourcePositionTest",
        "numberRunning": 1,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.comparison.EqualTest",
        "numberRunning": 5,
        "numberPassing": 0,
        "numberFailing": 1,
        "numberErroring": 4,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.constructorcallnewclass.NewClassTest",
        "numberRunning": 7,
        "numberPassing": 6,
        "numberFailing": 0,
        "numberErroring": 1,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.reference.CloneReferenceTest",
        "numberRunning": 2,
        "numberPassing": 0,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      },
      {
        "testClass": "spoon.test.eval.EvalTest",
        "numberRunning": 10,
        "numberPassing": 8,
        "numberFailing": 0,
        "numberErroring": 2,
        "numberSkipping": 0
      }
    ],
    "failureDetails": [
      {
        "testClass": "spoon.test.signature.SignatureTest",
        "testMethod": "testNullSignatureInUnboundVariable",
        "failureName": "java.lang.IndexOutOfBoundsException",
        "detail": "Index: 0, Size: 0",
        "isError": true
      },
      {
        "testClass": "spoon.test.casts.CastTest",
        "testMethod": "testCast1",
        "failureName": "spoon.compiler.ModelBuildingException",
        "detail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X {public void foo() { String x\u003d(String) new Object();}};;\n    }\n}",
        "isError": true
      },
      {
        "testClass": "spoon.test.serializable.SerializableTest",
        "testMethod": "testSerialCtStatement",
        "failureName": "spoon.compiler.ModelBuildingException",
        "detail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        String hello \u003d\"t1\"; System.out.println(hello);\n    }\n}",
        "isError": true
      },
      {
        "testClass": "spoon.test.signature.SignatureTest",
        "testMethod": "testMethodInvocationSignatureWithVariableAccess",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.snippets.SnippetTest",
        "testMethod": "testSnippetFullClass",
        "failureName": "spoon.compiler.ModelBuildingException",
        "detail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X {public void foo() { int x\u003d0;}};;\n    }\n}",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.VariableAccessTest",
        "testMethod": "testMultipleDeclarationsOfLocalVariable",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.comparison.EqualTest",
        "testMethod": "testEqualsEmptyException",
        "failureName": "java.lang.AssertionError",
        "detail": "Unable create model",
        "isError": false
      },
      {
        "testClass": "spoon.test.reference.TypeReferenceTest",
        "testMethod": "testArgumentOfAInvocationIsNotATypeAccess",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.parent.ParentTest",
        "testMethod": "testHasParent",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.model.SwitchCaseTest",
        "testMethod": "testIterationStatements",
        "failureName": "spoon.compiler.ModelBuildingException",
        "detail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X {public void foo() { int x\u003d0;switch(x) {case 0: x\u003dx+1;break;case 1: x\u003d0;default: x\u003d-1;}}};;\n    }\n}",
        "isError": true
      },
      {
        "testClass": "spoon.test.generics.GenericsTest",
        "testMethod": "testDiamond1",
        "failureName": "spoon.compiler.ModelBuildingException",
        "detail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class Diamond {\n         java.util.List\u003cString\u003e f \u003d new java.util.ArrayList\u003c\u003e();\n        };\n    }\n}",
        "isError": true
      },
      {
        "testClass": "spoon.test.jar.JarTest",
        "testMethod": "testFile",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.serializable.SourcePositionTest",
        "testMethod": "testSourcePosition",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.TypeReferenceTest",
        "testMethod": "testConstructorCallInNoClasspath",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.comparison.EqualTest",
        "testMethod": "testEqualsComment",
        "failureName": "spoon.compiler.ModelBuildingException",
        "detail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        int i\u003d0;\n    }\n}",
        "isError": true
      },
      {
        "testClass": "spoon.test.module.TestModule",
        "testMethod": "testModuleInfoWithComments",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.targeted.TargetedExpressionTest",
        "testMethod": "testStaticTargetsOfFieldAccessNoClasspath",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.ctClass.CtClassTest",
        "testMethod": "testAllTypeReferencesToALocalTypeShouldNotStartWithNumber",
        "failureName": "spoon.compiler.ModelBuildingException",
        "detail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class Pozole {\n            public void m() {\n                class Cook {\n                    public Cook() {\n                    }\n\n                    public void m() {\n                        final java.lang.Class\u003cCook\u003e cookClass \u003d Cook.class;\n                    }\n                }\n                new Cook();\n            }\n        };\n    }\n}",
        "isError": true
      },
      {
        "testClass": "spoon.test.methodreference.MethodReferenceTest",
        "testMethod": "testNoClasspathExecutableReferenceExpression",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.intercession.IntercessionTest",
        "testMethod": "testInsertEnd",
        "failureName": "spoon.compiler.ModelBuildingException",
        "detail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X {public void foo() { int x\u003d0; String foo\u003d\"toto\";}};;\n    }\n}",
        "isError": true
      },
      {
        "testClass": "spoon.test.parent.ParentTest",
        "testMethod": "testParentOfCtPackageReference",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.intercession.insertBefore.InsertMethodsTest",
        "testMethod": "testInsertAfterSwitchCase",
        "failureName": "spoon.compiler.ModelBuildingException",
        "detail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X {public void foo() {  int x\u003d0;  int y\u003d0;  int z\u003dx+y; }};;\n    }\n}",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.TypeReferenceTest",
        "testMethod": "testPackageInNoClasspath",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.api.APITest",
        "testMethod": "testBasicAPIUsage",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.VariableAccessTest",
        "testMethod": "testGetDeclarationAfterClone",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.jar.JarTest",
        "testMethod": "testResource",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.eval.EvalTest",
        "testMethod": "testVisitorPartialEvaluator_if",
        "failureName": "spoon.compiler.ModelBuildingException",
        "detail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        if (false) {System.out.println(\"foo\");} else {System.out.println(\"bar\");} ;\n    }\n}",
        "isError": true
      },
      {
        "testClass": "spoon.test.trycatch.TryCatchTest",
        "testMethod": "testTryCatchVariableGetType",
        "failureName": "spoon.compiler.ModelBuildingException",
        "detail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X {public void foo() { try{}catch(RuntimeException e){System.exit(0);}}};;\n    }\n}",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportTest",
        "testMethod": "testNullable",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.compilation.CompilationTest",
        "testMethod": "testExoticClassLoader",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.intercession.insertBefore.InsertMethodsTest",
        "testMethod": "insertBeforeAndUpdateParent",
        "failureName": "spoon.compiler.ModelBuildingException",
        "detail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X {public void foo() {  int x\u003d0;  int y\u003d0;  int z\u003dx+y; }};;\n    }\n}",
        "isError": true
      },
      {
        "testClass": "spoon.test.field.FieldTest",
        "testMethod": "getFQNofFieldReference",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.model.IncrementalLauncherTest",
        "testMethod": "testIncremental3",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.intercession.insertBefore.InsertMethodsTest",
        "testMethod": "testInsertBeforeWithBrace",
        "failureName": "spoon.compiler.ModelBuildingException",
        "detail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X {public void foo() {  int x\u003d0;  int y\u003d0;  int z\u003dx+y; }};;\n    }\n}",
        "isError": true
      },
      {
        "testClass": "spoon.test.module.TestModule",
        "testMethod": "testDirectiveOrders",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.annotation.AnnotationTest",
        "testMethod": "testGetAnnotationFromParameter",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.trycatch.TryCatchTest",
        "testMethod": "testFullyQualifiedException",
        "failureName": "spoon.compiler.ModelBuildingException",
        "detail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X {public void foo() { try{}catch(java.lang.RuntimeException e){}}};;\n    }\n}",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.TypeReferenceTest",
        "testMethod": "testTypeReferenceSpecifiedInClassDeclarationInNoClasspath",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.TypeReferenceTest",
        "testMethod": "testTypeDeclarationWildcard",
        "failureName": "spoon.compiler.ModelBuildingException",
        "detail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        java.util.List\u003c?\u003e l \u003d null;\n    }\n}",
        "isError": true
      },
      {
        "testClass": "spoon.test.type.TypeTest",
        "testMethod": "testTypeAccessOnPrimitive",
        "failureName": "spoon.compiler.ModelBuildingException",
        "detail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X {public void foo() { Class klass\u003dnull;  boolean x\u003d (klass \u003d\u003d short.class);}};;\n    }\n}",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportTest",
        "testMethod": "testSuperInheritanceHierarchyFunctionNoClasspath",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.comment.CommentTest",
        "testMethod": "testDocumentationContract",
        "failureName": "spoon.compiler.ModelBuildingException",
        "detail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n\n            int[] array \u003d new int[10];\n            System.out.println(\n            array[0] // \u003c-- array read\n            );\n        ;\n    }\n}",
        "isError": true
      },
      {
        "testClass": "spoon.test.signature.SignatureTest",
        "testMethod": "testNullSignature",
        "failureName": "spoon.compiler.ModelBuildingException",
        "detail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X {public Object foo() { return null;}};;\n    }\n}",
        "isError": true
      },
      {
        "testClass": "spoon.test.snippets.SnippetTest",
        "testMethod": "testCompileSnippetSeveralTimes",
        "failureName": "spoon.compiler.ModelBuildingException",
        "detail": "snippet compilation error while compiling: class Wrapper {\n    static java.lang.Object wrap() throws java.lang.Throwable {\n        return 1 \u003e 2;\n    }\n}",
        "isError": true
      },
      {
        "testClass": "spoon.test.compilation.CompilationTest",
        "testMethod": "compileTest",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.prettyprinter.DefaultPrettyPrinterTest",
        "testMethod": "testTernaryParenthesesOnLocalVariable",
        "failureName": "spoon.compiler.ModelBuildingException",
        "detail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        final int foo \u003d (new Object() instanceof Object ? new Object().equals(null) : new Object().equals(new Object())) ? 0 : new Object().hashCode();;\n    }\n}",
        "isError": true
      },
      {
        "testClass": "spoon.test.intercession.IntercessionTest",
        "testMethod": "testInsertIfIntercession",
        "failureName": "spoon.compiler.ModelBuildingException",
        "detail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X {public int bar() {if (1 \u003d\u003d 0)\n            return 1;\n        else\n            return 0;\n        }};;\n    }\n}",
        "isError": true
      },
      {
        "testClass": "spoon.test.ctType.CtTypeTest",
        "testMethod": "testHasMethodOnNull",
        "failureName": "spoon.compiler.ModelBuildingException",
        "detail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X { public void foo() {} };\n    }\n}",
        "isError": true
      },
      {
        "testClass": "spoon.test.model.TypeTest",
        "testMethod": "testGetUsedTypesForTypeInRootPackage",
        "failureName": "spoon.compiler.ModelBuildingException",
        "detail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X { X x; };\n    }\n}",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportTest",
        "testMethod": "testStaticImportForInvocationInNoClasspath",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.TypeReferenceTest",
        "testMethod": "testAnnotationOnMethodWithPrimitiveReturnTypeInNoClasspath",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.JarLauncherTest",
        "testMethod": "testJarLauncherNoPom",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.compilation.CompilationTest",
        "testMethod": "compileCommandLineTest",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.imports.ImportAndExtendWithPackageNameTest",
        "testMethod": "testBuildModel",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.module.TestModule",
        "testMethod": "testCompleteModuleInfoContentNoClasspath",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.intercession.IntercessionTest",
        "testMethod": "testEqualConstructor",
        "failureName": "spoon.compiler.ModelBuildingException",
        "detail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X { public X() {} };;\n    }\n}",
        "isError": true
      },
      {
        "testClass": "spoon.test.model.BlockTest",
        "testMethod": "testAddEmptyBlock",
        "failureName": "spoon.compiler.ModelBuildingException",
        "detail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X {public void foo() { }};;\n    }\n}",
        "isError": true
      },
      {
        "testClass": "spoon.test.intercession.insertBefore.InsertMethodsTest",
        "testMethod": "testInsertBefore",
        "failureName": "spoon.compiler.ModelBuildingException",
        "detail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X {public void foo() {  int x\u003d0;  int y\u003d0;  int z\u003dx+y; }};;\n    }\n}",
        "isError": true
      },
      {
        "testClass": "spoon.test.casts.CastTest",
        "testMethod": "testCast3",
        "failureName": "spoon.compiler.ModelBuildingException",
        "detail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X\u003cA\u003e {void addConsumedAnnotationType(Class\u003c? extends A\u003e annotationType) {}\n        public void foo() { Class\u003c?\u003e x \u003d null; addConsumedAnnotationType((Class\u003cA\u003e) x);}};;\n    }\n}",
        "isError": true
      },
      {
        "testClass": "spoon.test.module.TestModule",
        "testMethod": "testModuleInfoShouldBeCorrectlyPrettyPrinted",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.TypeReferenceTest",
        "testMethod": "testAnonymousClassesHaveAnEmptyStringForItsNameInNoClasspath",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.api.APITest",
        "testMethod": "testGetOneLinerMainClassFromCU",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.variable.AccessTest",
        "testMethod": "testAccessToStringOnPostIncrement",
        "failureName": "spoon.compiler.ModelBuildingException",
        "detail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X {public void foo() { Integer i \u003d 1; (i++).toString(); int k \u003d 0; k++;}};;\n    }\n}",
        "isError": true
      },
      {
        "testClass": "spoon.test.trycatch.TryCatchTest",
        "testMethod": "testCatchWithUnknownExceptions",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.enums.EnumsTypeTest",
        "testMethod": "testEnumsFromInterface",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.comparison.EqualTest",
        "testMethod": "testEqualsMultitype",
        "failureName": "spoon.compiler.ModelBuildingException",
        "detail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        try{}catch(RuntimeException | AssertionError e){};\n    }\n}",
        "isError": true
      },
      {
        "testClass": "spoon.test.fieldaccesses.FieldAccessTest",
        "testMethod": "testFieldAccessOnUnknownType",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.trycatch.TryCatchTest",
        "testMethod": "testCatchOrder",
        "failureName": "spoon.compiler.ModelBuildingException",
        "detail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X {public void foo() { try{}catch(RuntimeException e){java.lang.System.exit(0);}      catch(Exception e){}}};;\n    }\n}",
        "isError": true
      },
      {
        "testClass": "spoon.test.intercession.insertBefore.InsertMethodsTest",
        "testMethod": "testInsertAfterWithBrace",
        "failureName": "spoon.compiler.ModelBuildingException",
        "detail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X {public void foo() {  int x\u003d0;  int y\u003d0;  int z\u003dx+y; }};;\n    }\n}",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.CloneReferenceTest",
        "testMethod": "testGetDeclarationOfFieldAfterClone",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.constructorcallnewclass.NewClassTest",
        "testMethod": "testCtNewClassInNoClasspath",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.replace.ReplaceTest",
        "testMethod": "testReplaceAPackageReferenceByAnotherOne",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.api.APITest",
        "testMethod": "testDuplicateFolder",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.intercession.RemoveTest",
        "testMethod": "testRemoveAllStatements",
        "failureName": "spoon.compiler.ModelBuildingException",
        "detail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X {public void foo() { int x\u003d0;int y\u003d0;}};;\n    }\n}",
        "isError": true
      },
      {
        "testClass": "spoon.JarLauncherTest",
        "testMethod": "testJarLauncher",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.api.APITest",
        "testMethod": "testOverrideOutputWriter",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.api.APITest",
        "testMethod": "testDuplicateEntry",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.model.IncrementalLauncherTest",
        "testMethod": "testIncremental2",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.ctType.CtTypeTest",
        "testMethod": "testHasMethodNotHasMethod",
        "failureName": "spoon.compiler.ModelBuildingException",
        "detail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X { public void foo() {} };\n    }\n}",
        "isError": true
      },
      {
        "testClass": "spoon.test.api.APITest",
        "testMethod": "testDuplicateFilePlusFolder",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.snippets.SnippetTest",
        "testMethod": "testCompileStatementWithReturn",
        "failureName": "spoon.compiler.ModelBuildingException",
        "detail": "snippet compilation error while compiling: class Wrapper {\n    static java.lang.Integer wrap() throws java.lang.Throwable {\n        return 3;\n    }\n}",
        "isError": true
      },
      {
        "testClass": "spoon.test.compilation.CompilationTest",
        "testMethod": "testNewInstance",
        "failureName": "spoon.compiler.ModelBuildingException",
        "detail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X implements spoon.test.compilation.testclasses.Ifoo { public int foo() {int i\u003d0; return i;} };\n    }\n}",
        "isError": true
      },
      {
        "testClass": "spoon.test.replace.ReplaceTest",
        "testMethod": "testReplaceBlockTry",
        "failureName": "spoon.compiler.ModelBuildingException",
        "detail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        int j \u003d 0;;\n    }\n}",
        "isError": true
      },
      {
        "testClass": "spoon.test.fieldaccesses.FieldAccessTest",
        "testMethod": "testFieldAccessAutoExplicit",
        "failureName": "spoon.compiler.ModelBuildingException",
        "detail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        int age \u003d 1;\n    }\n}",
        "isError": true
      },
      {
        "testClass": "spoon.reflect.declaration.UnknownDeclarationTest",
        "testMethod": "testUnknownCalls",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.methodreference.MethodReferenceTest",
        "testMethod": "testNoClasspathSuperExecutable",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.VariableAccessTest",
        "testMethod": "testDeclaringTypeOfALambdaReferencedByParameterReference",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.CloneReferenceTest",
        "testMethod": "testGetDeclarationAfterClone",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.TypeReferenceTest",
        "testMethod": "testInvocationWithFieldAccessInNoClasspath",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.targeted.TargetedExpressionTest",
        "testMethod": "testStaticTargetsOfInvNoClasspath",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.model.BlockTest",
        "testMethod": "testIterationStatements",
        "failureName": "spoon.compiler.ModelBuildingException",
        "detail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X {public void foo() { int x\u003d0;int y\u003d0;}};;\n    }\n}",
        "isError": true
      },
      {
        "testClass": "spoon.test.fieldaccesses.FieldAccessTest",
        "testMethod": "testFieldAccessNoClasspath",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.parameters.ParameterTest",
        "testMethod": "testMultiParameterLambdaTypeReference",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.method.MethodTest",
        "testMethod": "testGetAllMethods",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.intercession.insertBefore.InsertMethodsTest",
        "testMethod": "testInsertAfterWithoutBrace",
        "failureName": "spoon.compiler.ModelBuildingException",
        "detail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X {public void foo() {  int x\u003d0;  int y\u003d0;  int z\u003dx+y; }};;\n    }\n}",
        "isError": true
      },
      {
        "testClass": "spoon.test.snippets.SnippetTest",
        "testMethod": "testCompileSnippetWithContext",
        "failureName": "spoon.compiler.ModelBuildingException",
        "detail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        int i \u003d 1;;\n    }\n}",
        "isError": true
      },
      {
        "testClass": "spoon.test.api.NoClasspathTest",
        "testMethod": "test",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.reflect.ast.CloneTest",
        "testMethod": "testCloneCastConditional",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.targeted.TargetedExpressionTest",
        "testMethod": "testInitializeFieldAccessInNoclasspathMode",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.signature.SignatureTest",
        "testMethod": "testLiteralSignature",
        "failureName": "spoon.compiler.ModelBuildingException",
        "detail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        System.out.println(\"hello\");\n    }\n}",
        "isError": true
      },
      {
        "testClass": "spoon.test.intercession.insertBefore.InsertMethodsTest",
        "testMethod": "testInsertAfter",
        "failureName": "spoon.compiler.ModelBuildingException",
        "detail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X {public void foo() {  int x\u003d0;  int y\u003d0;  int z\u003dx+y; }};;\n    }\n}",
        "isError": true
      },
      {
        "testClass": "spoon.test.ctType.CtTypeTest",
        "testMethod": "testHasMethodInDirectMethod",
        "failureName": "spoon.compiler.ModelBuildingException",
        "detail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X { public void foo() {} };\n    }\n}",
        "isError": true
      },
      {
        "testClass": "spoon.test.visitor.AssignmentsEqualsTest",
        "testMethod": "testEquals",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.comparison.EqualTest",
        "testMethod": "testEqualsActualTypeRef",
        "failureName": "spoon.compiler.ModelBuildingException",
        "detail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        java.util.List\u003cString\u003e l ;\n    }\n}",
        "isError": true
      },
      {
        "testClass": "spoon.test.comparison.EqualTest",
        "testMethod": "testEqualsDetails",
        "failureName": "spoon.compiler.ModelBuildingException",
        "detail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        try{}catch(RuntimeException | AssertionError e){};\n    }\n}",
        "isError": true
      },
      {
        "testClass": "spoon.test.enums.EnumsTypeTest",
        "testMethod": "testEnumsType",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.eval.EvalTest",
        "testMethod": "testVisitorPartialEvaluator_binary",
        "failureName": "spoon.compiler.ModelBuildingException",
        "detail": "snippet compilation error while compiling: class Wrapper {\n    static java.lang.Object wrap() throws java.lang.Throwable {\n        return 0+1;\n    }\n}",
        "isError": true
      },
      {
        "testClass": "spoon.test.signature.SignatureTest",
        "testMethod": "testMethodInvocationSignatureStaticFieldsVariables",
        "failureName": "spoon.compiler.ModelBuildingException",
        "detail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        Integer.toBinaryString(Integer.MAX_VALUE);\n    }\n}",
        "isError": true
      },
      {
        "testClass": "spoon.test.intercession.IntercessionTest",
        "testMethod": "testInsertAfter",
        "failureName": "spoon.compiler.ModelBuildingException",
        "detail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X {public void foo() { int x\u003d0; int y\u003d0; int z\u003dx+y;}};;\n    }\n}",
        "isError": true
      },
      {
        "testClass": "spoon.reflect.ast.CloneTest",
        "testMethod": "testCopyMethod",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.model.IncrementalLauncherTest",
        "testMethod": "testCache",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.parameters.ParameterTest",
        "testMethod": "testGetParameterReferenceInLambdaNoClasspath",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.JarLauncherTest",
        "testMethod": "testJarLauncherFernflower",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.strings.StringLiteralTest",
        "testMethod": "testSnippetFullClass",
        "failureName": "spoon.compiler.ModelBuildingException",
        "detail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class StringValueUTF {\n         String f0 \u003d \"toto\";\n         String f1 \u003d \"\\n\";\n         char c1 \u003d \u0027\\n\u0027;\n         String f2 \u003d \"\\u20ac\";\n         char c2 \u003d \u0027\\u20ac\u0027;\n         String f3 \u003d \"€\";\n         char c3 \u003d \u0027€\u0027;\n         String f4 \u003d \"\\t\";\n         char c4 \u003d \u0027\\t\u0027;\n         String f5 \u003d \" \";\n         char c5 \u003d \u0027 \u0027;\n         String f6 \u003d \"€\\u20ac\";\n        };\n    }\n}",
        "isError": true
      },
      {
        "testClass": "spoon.test.casts.CastTest",
        "testMethod": "testCast2",
        "failureName": "spoon.compiler.ModelBuildingException",
        "detail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X {public void foo() { Class\u003cString\u003e x\u003d(Class\u003cString\u003e) new Object();}};;\n    }\n}",
        "isError": true
      },
      {
        "testClass": "spoon.test.trycatch.TryCatchTest",
        "testMethod": "testExceptionJava7",
        "failureName": "spoon.compiler.ModelBuildingException",
        "detail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X {public void foo() { try{}catch(RuntimeException | Error e){System.exit(0);}}};;\n    }\n}",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.TypeReferenceTest",
        "testMethod": "testTypeReferenceSpecifiedInClassDeclarationInNoClasspathWithGenerics",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.ExecutableReferenceTest",
        "testMethod": "testCreateReferenceForAnonymousExecutable",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.VariableAccessTest",
        "testMethod": "testDeclarationOfVariableReference",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.reference.ExecutableReferenceTest",
        "testMethod": "testCallMethodOfClassNotPresent",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.lambda.LambdaTest",
        "testMethod": "testFieldAccessInLambdaNoClassPath",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.comment.CommentTest",
        "testMethod": "testSnippedWithComments",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.api.APITest",
        "testMethod": "testOneLinerIntro",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.support.visitor.java.JavaReflectionTreeBuilderTest",
        "testMethod": "testInnerClassWithConstructorParameterAnnotated",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.intercession.insertBefore.InsertMethodsTest",
        "testMethod": "testInsertBeforeSwitchCase",
        "failureName": "spoon.compiler.ModelBuildingException",
        "detail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X {public void foo() {  int x\u003d0;  int y\u003d0;  int z\u003dx+y; }};;\n    }\n}",
        "isError": true
      },
      {
        "testClass": "spoon.test.intercession.insertBefore.InsertMethodsTest",
        "testMethod": "testInsertBeforeWithoutBrace",
        "failureName": "spoon.compiler.ModelBuildingException",
        "detail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X {public void foo() {  int x\u003d0;  int y\u003d0;  int z\u003dx+y; }};;\n    }\n}",
        "isError": true
      },
      {
        "testClass": "spoon.test.model.IncrementalLauncherTest",
        "testMethod": "testIncremental1",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.signature.SignatureTest",
        "testMethod": "testUnboundFieldSignature",
        "failureName": "java.lang.IndexOutOfBoundsException",
        "detail": "Index: 0, Size: 0",
        "isError": true
      },
      {
        "testClass": "spoon.LauncherTest",
        "testMethod": "testLLauncherBuildModelReturnAModel",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.lambda.LambdaTest",
        "testMethod": "testTypeAccessInLambdaNoClassPath",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      },
      {
        "testClass": "spoon.test.intercession.IntercessionTest",
        "testMethod": "testInsertBegin",
        "failureName": "spoon.compiler.ModelBuildingException",
        "detail": "snippet compilation error while compiling: class Wrapper {\n    static void wrap() throws java.lang.Throwable {\n        class X {public void foo() { int x\u003d0;}};;\n    }\n}",
        "isError": true
      },
      {
        "testClass": "spoon.test.factory.TypeFactoryTest",
        "testMethod": "testGetClassWithDollarAndNestedClass",
        "failureName": "java.lang.NullPointerException",
        "isError": true
      }
    ]
  },
  "projectMetrics": {
    "numberModules": 1,
    "numberSourceFiles": 656,
    "numberTestFiles": 712,
    "numberLibrariesFailingModule": 37,
    "numberLines": 0
  },
  "commits": {
    "buggyBuild": {
      "repoName": "INRIA/spoon",
      "branchName": "master",
      "sha": "157de1f975b0beebe4906af1eaf3fda1e6ae776e",
      "url": "http://github.com/INRIA/spoon/commit/157de1f975b0beebe4906af1eaf3fda1e6ae776e",
      "date": "Nov 10, 2018 10:13:29 PM"
    },
    "fixerBuild": {
      "repoName": "INRIA/spoon",
      "branchName": "master",
      "sha": "186dea8b5267f6d0e93c95d742752cf5a1b8246b",
      "url": "http://github.com/INRIA/spoon/commit/186dea8b5267f6d0e93c95d742752cf5a1b8246b",
      "date": "Nov 11, 2018 7:03:49 AM"
    },
    "buggyBuildForkRepo": {
      "repoName": "pvojtechovsky/spoon",
      "branchName": "feaPackDeclHasPos",
      "sha": "aa1b0121e34ba490729b07019fc5188c25fb3102",
      "url": "https://github.com/pvojtechovsky/spoon/commit/aa1b0121e34ba490729b07019fc5188c25fb3102",
      "date": "Nov 11, 2018 7:03:49 AM"
    },
    "buggyBuildBaseRepo": {
      "repoName": "INRIA/spoon",
      "branchName": "master",
      "sha": "51e64eb8924b7a33d4d87608d0e83f374e82c0ef",
      "url": "https://github.com/INRIA/spoon/commit/51e64eb8924b7a33d4d87608d0e83f374e82c0ef",
      "date": "Nov 8, 2018 8:19:26 PM"
    },
    "fixerBuildForkRepo": {
      "repoName": "pvojtechovsky/spoon",
      "branchName": "feaPackDeclHasPos",
      "sha": "aa1b0121e34ba490729b07019fc5188c25fb3102",
      "url": "https://github.com/pvojtechovsky/spoon/commit/aa1b0121e34ba490729b07019fc5188c25fb3102",
      "date": "Nov 11, 2018 7:03:49 AM"
    },
    "fixerBuildBaseRepo": {
      "repoName": "INRIA/spoon",
      "branchName": "master",
      "sha": "51e64eb8924b7a33d4d87608d0e83f374e82c0ef",
      "url": "https://github.com/INRIA/spoon/commit/51e64eb8924b7a33d4d87608d0e83f374e82c0ef",
      "date": "Nov 8, 2018 8:19:26 PM"
    }
  },
  "type": "failing_passing"
}